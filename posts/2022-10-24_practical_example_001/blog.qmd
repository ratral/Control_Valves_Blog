---
title: "Example: Flow coefficient and cavitation value"
subtitle: ""
author: "Dr. Raúl Trujillo Álvarez"
date: "2022-10-25"
categories: [hydraulics, theory, valves, analysis, example]
description: ''
execute: 
  message: false
  warning: false
  echo: false
  embed-resources: true
editor_options: 
  chunk_output_type: console
---

```{r}
library(tidyverse)
library(gt)
library(hyd4gpv)

# IMPUT DATA
## Parameters of the Project
data <- list(
  medium        = "Raw Water",
  temp          = 15,      # Water temperature in °C
  masl          = 1780,    # meters above sea level
  dn            = 200,     # Diameter of the RIKO valve en mm
  d1            = 200,     # Diameter of the Pipe Upstream in mm
  d2            = 200,     # Diameter of the Pipe Downstream in mm
  add_factor    = 1.3      # The factor of safety for the Kv, this must be >= 1 
)


## base_data 
###  - Pressures in bar
###  - Flow in m3/h

data$operation <- tribble(
    ~condition,  ~p1,   ~p2,  ~flow,
    "01.max",	 4.439,	2.615,	396.0,
    "02.max",	18.263,	5.241,	396.0,
    "03.max",	 9.455,	2.615,	396.0,
    "04.max",	20.215,	2.190,	396.0,
    "05.max",	19.903,	2.190,	396.0,
    "06.max",	19.132,	2.190,	396.0,
    "07.max",	18.534,	2.347,	396.0,
    "08.max",	17.439,	2.347,	396.0,
    "09.max",	17.148,	2.347,	396.0,
    "10.max",	18.314,	2.718,	396.0,
    "01.min",	 4.368,	2.249,	252.0,
    "02.min",	18.193,	5.077,	252.0,
    "03.min",	 9.337,	2.249,	252.0,
    "04.min",	20.185,	2.081,	252.0,
    "05.min",	19.873,	2.081,	252.0,
    "06.min",	19.100,	2.081,	252.0,
    "07.min",	18.470,	2.148,	252.0,
    "08.min",	17.372,	2.148,	252.0,
    "09.min",	17.081,	2.148,	252.0,
    "10.min",	18.299,	2.291,	252.0
    
  ) 

# Calculation input data characteristics
base_data <- data$operation |>  
  hyd4gpv::points_cloud_param(data$dn, data$masl, data$temp) |> 
  arrange(condition, flow)
```


# Sizing sample

These blog notes provide a simplified procedure for sizing control valves at standard service conditions. The data required to size a valve, such as nominal size, gauge pressures, and flow rates, are actual values of a project.

Initially, I would like to make a first approximation to the selection process of the control valve. Later, in other blogs, I will analyze the different cases.

![Operating data (Source: Wagner, Walter. Regel- und Sicherheitsarmaturen.)](control_valve_01.png)


# Flowchart of the valve selection process.

```{mermaid}
flowchart TD
  A[Hydraulic Model] --> B(1. CV \n data operation)
  A --> E
  B --> C(2. Select min. Kv \n that the CV must supply)
  C--> H
  E[Valve DN, PN] --> F[(DB Parameters \n of Control Valves)]
  F --> H{3. Select CVs with \n Kvs > 1.3* Min.Kvs}
  H-.NO.-> A
  H--YES --> I(4. Calc. Kv/Kvs and \n valve position for all \n data operation and Types of valves.)
  I --> J(5. Calculate the Cavitation and non-cavitation \n regime for every Operation condition)
  J --> K(6. Define criteria for valve selection: \n A. General Criteria \n B. System or project-dependent criteria )
  K --> L(Select valve.)
```

::: callout-note
-   CV: Control Valve
-   Kv: Flow coefficient
-   Kvs: Maximum flow coefficient
-   Kv/Kvs : relative flow coefficient
:::

# First step: Collection of the operations data for the control valve.

-   Medium: `r data$medium`.

-   Medium Temperature: `r data$temp` $°C$.

-   Localization of the valve: `r data$masl` meters above sea level.

-   Valve Diameter: `r data$dn` $mm$

-   Diameter Upstream Pipe `r data$d1` $mm$

-   Diameter Downstream Pipe `r data$d2` $mm$

-   Relative density `r round(water_density(data$temp)/1000,2)`

```{r}
#| label: tbl-base_data
#| tbl-cap: "Operations Data"
#| include: true
#| echo: false

# Print Table base_data
base_data |> 
  select(
    condition, p1, p2, dp, flow, kv, 
    velocity, zeta, sig_1, sig_2
  ) |> 
  mutate(across(where(is.numeric), round, 2)) |>
  
  gt(rowname_col = "condition") |> 
  
  tab_row_group(
    label = "Min.Condition",
    rows = matches(".min")
  ) |> 
  
  tab_row_group(
    label = "Max.Condition",
    rows = matches(".max")
  ) |> 
  
  tab_header(
    title = md("**Operations Data**"),
    subtitle = md("Plus Calculated Data")
  ) |> 
  
  tab_spanner(
    label = "Supplied data",
    columns = c(p1,	p2,	dp,	flow)
  ) |> 
  tab_spanner(
    label = "Calculated Data",
    columns = c(kv,	zeta,	 velocity,	sig_1,	sig_2)
  ) |> 
  
  cols_label(
    p1    = html("<i>P<sub>1</sub><br>(bar)</i>"),
    p2    = html("<i>P<sub>2</sub><br>(bar)</i>"),
    dp    = html("<i>&Delta;P<br>(bar)</i>"),
    flow  = html("<i>Flow<br>(m<sup>3</sup>/h)</i>"),
    kv       = html("<i>K<sub>v</sub><br>(m<sup>3</sup>/h)</i>"),
    zeta     = html("<i>&zeta;<br>(-)</i>"),
    velocity = html("<i>Vel.<br>(m/s)</i>"),
    sig_1    = html("<i>&sigma;<sub>1</sub><br>(-)</i>"),
    sig_2    = html("<i>&sigma;<sub>2</sub><br>(-)</i>")
  ) |> 
  
  tab_source_note(
    source_note = "Source: Data of the hydraulic analysis of the system"
  ) |> 
  
   tab_footnote(
    footnote = md("The **maximum** flow coefficient."),
    locations = cells_body(
      columns = kv,
      rows = kv == max(kv)
    )
  ) |> 
  
  
  opt_stylize(style = 6, color = "gray")

```

**Columns definitions:**

-   $P_1$: Upstream static (gauge) pressure in $(bar)$;
-   $P_2$: Downstream static (gauge) pressure in $(bar)$;
-   $Flow$: Volumetric flow rate in $(m^3/h)$;
-   $(\Delta{P})$: Differential pressure between upstream and downstream pressure taps in $bar$;
-   $K_v$: Flow coefficient $(m^3/h)$; $K_v = q \cdot \sqrt{\frac {(\rho / \rho_{0})}{\Delta P}}$
-   $Vel.$ : Velocity in $m/s$
-   $\zeta$: Zeta Value; Required Velocity head loss coefficient;
-   $\sigma_1$: Cavitation index equal to $(P_2 - P_v)/\Delta{P}$ at service conditions;
-   $\sigma_2$: Cavitation index equal to $(P_2 - P_v)/(\Delta{P}+v^2/2g)$ at service conditions.

# Second step: select the minimum $K_v$ required.

-   The maximum flow coefficient $K_v$ required for operation of the control valve is: `r round(max(base_data$kv),2)` $m^3/h$.
-   The control valve to be selected must meet at least $1.3$ times the maximum flow coefficient required.
-   Therefore the minimum $K_{vs}$ (full open flow coefficient) of the selected valve must be: `r round(max(base_data$kv*1.3),2)` $m^3/h$.

# Third step: Select the valves plus dissipation element that meet the minimum required flow coefficient.

For this exercise, we will assume the following:

1.  We only have three valves from 3 different suppliers. Brands "A", "B" and "C"
2.  that the required valves should not have anti-cavitation cylinders.
3.  The parameters for the curve $K_v/K_{vs}$, the Zeta value $\zeta_{vs}$ and the Liquid pressure recovery factor $F_{Ls}$[^1] are available.[^2]
4.  $K_v/K_{vs} = \frac{d}{1 +\exp(b\cdot(\log{(vp)}-\log{(e)}))}$
5.  The cavitation values are established based on the degree of opening, whose function is defined based on the factors of $K_v/K_{vs}$ and $F_L$.[^3]

                                                             
```{r}
#| label: tbl-parameter
#| tbl-cap: "Valve's Parameter"
#| include: true
#| echo: false
#| 

param_valves <- tribble(
  ~brand,  ~kv_b, ~kv_d,  ~kv_e, ~zvs,  ~fls,
     "A", -2.976, 1.409, 74.073, 3.39, 0.667,
     "B", -3.299, 1.561, 83.924, 7.60, 0.832,
     "C", -2.926, 1.527, 80.354, 1.90, 0.617
)

param_valves <- param_valves |> 
  mutate(kvs = kv_value(data$dn, zvs))

# Print Table with the parameter of the Valves (Brands A, B and C)
param_valves |>
  gt() |>
    cols_label(
      brand = html("Brand"),
      kv_b = html("<i>b</i>"),
      kv_d = html("<i>d</i>"),
      kv_e = html("<i>e</i>"),
      zvs  = html("<i>&zeta;<sub>vs</sub></i>"),
      fls  = html("<i>F<sub>Ls</sub></i>"),
      kvs  = html("<i>K<sub>vs</sub><br>(m<sup>3</sup>/h)</i>")
    )|> 

  tab_header(
    title = md("**For Valves DN-200 Millimeter and PN-25**"),
  ) |> 
  
  tab_spanner(
    label = html("<i>Parameter for ( K<sub>v</sub> / K<sub>vs</sub> )"),
    columns = c(kv_b, kv_d, kv_e)
  ) |> 
  
  fmt_number(
    columns = kvs,
    decimals = 1,
    suffixing = FALSE
  ) |> 

  opt_stylize(style = 6, color = "gray")


```

::: callout-note
As can be seen in table 2, all the selected valves (Brand A, B, and C) comply with a flow coefficient of a $K_{vs} \geq$ `r round(max(base_data$kv),2)` $m^3/h$ required for the operation.
:::

# Fourth and five steps: Calculate the position and cavitation regime for the selected valves for the different operation scenarios.

```{r}
#| label: calculation_tbl-full_data
#| include: true
#| echo: false
#| 

full_data <- tidyr::crossing(param_valves, base_data) |> 
  mutate(kv_kvs = .data$kv/.data$kvs,
         position = pmap_dbl(list(.data$kv_kvs, .data$kv_b, .data$kv_d, .data$kv_e), ~inv_LL3(..1, ..2, ..3, ..4))) |> 
  mutate(sig_i     = sigma_i( .data$position, .data$kv_b, .data$kv_d, .data$kv_e, .data$fls),
         Sig_c     = sigma_c( .data$position, .data$kv_b, .data$kv_d, .data$kv_e, .data$fls),
         Sig_mv    = sigma_mv(.data$position, .data$kv_b, .data$kv_d, .data$kv_e, .data$fls),
         cav_index = cavtation_index(.data$position, .data$kv_b, .data$kv_d, .data$kv_e, .data$fls, .data$sig_2),
         regime    = cavtation_regime(.data$position, .data$kv_b, .data$kv_d, .data$kv_e, .data$fls, .data$sig_2)) |> 
  select(brand,	condition, kv_b,	kv_d,	kv_e,	zvs,	fls,	kvs,	p1,	p2,	flow,	
         dp,	velocity,	kv, kv_kvs,	position, zeta,	sig_0,	sig_1,	sig_2, 
         sig_i, Sig_c, Sig_mv, cav_index, regime)

# Def function for the generation of the results table
get_table_results <- function(df, typ_valve){
  df |> 
    filter(brand == typ_valve) |> 
    select(condition, p1,	p2,	flow, kv, kv_kvs, position, sig_2, regime) |> 
    mutate(kv_kvs = kv_kvs*100) |> 
    mutate(across(where(is.numeric), round, 2)) |>
  
  gt(rowname_col = "condition") |> 
  tab_row_group(
    label = "Min.Condition",
    rows = matches("*.min")
  ) |> 
  
  tab_row_group(
    label = "Max.Condition",
    rows = matches("*.max")
  ) |> 
  
  cols_label(
    p1    = html("<i>P<sub>1</sub><br>(bar)</i>"),
    p2    = html("<i>P<sub>2</sub><br>(bar)</i>"),
    flow  = html("<i>Flow<br>(m<sup>3</sup>/h)</i>"),
    kv       = html("<i>K<sub>v</sub><br>(m<sup>3</sup>/h)</i>"),
    kv_kvs   = html("<i>K<sub>v</sub>/K<sub>vs</sub><br>(%)</i>"),
    position = html("<i>Position<br>(%)</i>"),
    sig_2    = html("<i>&sigma;<sub>2</sub><br>(-)</i>"),
    regime   = html("<i>Cavitation<br>Regime</i>")
  ) |> 
  
    opt_stylize(style = 6, color = "gray")
}

# Plot Kv
plot_kv <- function(valve_typ, df, b, d, e, zvs, dn){

  df <- df |> 
    filter(brand == valve_typ) |> 
    select(position, kv) 
    
  x     <- data.frame(x = 0:100)
  kvs   <- kv_value(dn, zvs)
  y.max <- ceiling(kvs/1000)*1000 # Round kvs up to the nearest 50

  Max.Kv <- format(kvs, digits = 2, nsmall = 0, big.mark = ',')

  ggplot2::ggplot(data = x, mapping = aes(x = x)) +
    stat_function( fun = function(x) {drm_LL3( x, b, d, e)*kvs}, size = 1, color = "blue") +
    geom_point(data = df, aes(x = position, y = kv), colour="red", size = 2) +
    scale_x_continuous(breaks = seq(0, 100, 10)) +
    scale_y_continuous(breaks = seq(0, y.max, ceiling(y.max/10))) +
    labs( title    = latex2exp::TeX(glue::glue("Flow Coefficient $K_v$ in $(m^3/h)$ for Plunger Valve brand <<valve_typ>>, and DN-<<dn>>",
                                    .open = "<<", .close = ">>")),
          subtitle = latex2exp::TeX(glue::glue("For a DN-<<dn>> $mm$ with a $K_{v_{100\\%}}=$ <<Max.Kv>> $m^3/h$",
                                               .open = "<<", .close = ">>")),
          x        = "Opening degree (%)",
          y        = latex2exp::TeX('$k_{v} \\; (m^3/h)$')) +
    theme_bw()
}

# Plot Sigma
plot_sigma <- function(valve_typ, df, b, d, e, fls, dn){
  
    df <- df |> 
    filter(brand == valve_typ) |> 
    select(position, sig_2) 

  Max.fls <- format(fls,digits = 3, nsmall = 0, big.mark = ',')

  x <- data.frame(x = 1:100)
  ggplot2::ggplot( data = x, mapping = aes(x = x)) +
    stat_function( fun = function(x) {sigma_mv(x, b, d, e, fls)}, size = 1, aes(colour = "3.-Maximum")) +
    stat_function( fun = function(x) {sigma_c(x, b, d, e, fls)},  size = 1,  aes(colour = "2.-Constant")) +
    stat_function( fun = function(x) {sigma_i(x, b, d, e, fls)},  size = 1,  aes(colour = "1.-Incipient")) +
    geom_point(data = df, aes(x = position, y = sig_2), colour="black", size = 2) +
    scale_colour_manual("Borders of the cavitation: ", values = c("green", "orange", "red")) +
    scale_x_continuous( breaks = seq(0, 100, 10)) +
    labs( title    = latex2exp::TeX(glue::glue("Sigma values $(\\sigma)$ for Plunger Valve <<valve_typ>>, and DN-<<dn>>",
                                               .open = "<<", .close = ">>")),
          subtitle = latex2exp::TeX(glue::glue("$F_{L_{100\\%}}=$ <<Max.fls>>", .open = "<<", .close = ">>")),
          x        = "Opening degree (%)",
          y        = latex2exp::TeX('Sigma value ($\\sigma$)')) +
    theme_bw() + theme(legend.position = "bottom")
}

```

## Results for Brand A Valve

```{r}
#| label: results_valve_operation_Band_A
#| tbl-cap: "Results for the different operations scenarios."
#| include: true
#| echo: false
#| 

get_table_results(full_data, "A")

```

```{r}
i <- 1

plot_kv(param_valves$brand[i],
        full_data,
        param_valves$kv_b[i],
        param_valves$kv_d[i],
        param_valves$kv_e[i],
        param_valves$zvs[i],
        data$dn)

plot_sigma(param_valves$brand[i],
           full_data,
           param_valves$kv_b[i],
           param_valves$kv_d[i],
           param_valves$kv_e[i],
           param_valves$fls[i],
           data$dn)

```

## Results for Brand B Valve

```{r}
#| label: results_valve_operation_Band_B
#| tbl-cap: "Results for the different operations scenarios."
#| include: true
#| echo: false
#| 

get_table_results(full_data, "B")

```

```{r}
i <- 2

plot_kv(param_valves$brand[i],
        full_data,
        param_valves$kv_b[i],
        param_valves$kv_d[i],
        param_valves$kv_e[i],
        param_valves$zvs[i],
        data$dn)

plot_sigma(param_valves$brand[i],
           full_data,
           param_valves$kv_b[i],
           param_valves$kv_d[i],
           param_valves$kv_e[i],
           param_valves$fls[i],
           data$dn)

```

## Results for Brand C Valve

```{r}
#| label: results_valve_operation_Band_C
#| tbl-cap: "Results for the different operations scenarios."
#| include: true
#| echo: false
#| 

get_table_results(full_data, "C")

```

```{r}
i <- 3

plot_kv(param_valves$brand[i],
        full_data,
        param_valves$kv_b[i],
        param_valves$kv_d[i],
        param_valves$kv_e[i],
        param_valves$zvs[i],
        data$dn)

plot_sigma(param_valves$brand[i],
           full_data,
           param_valves$kv_b[i],
           param_valves$kv_d[i],
           param_valves$kv_e[i],
           param_valves$fls[i],
           data$dn)

```

# Sixth step: Define selection criteria and valve selection:

## Criteria

1.  General Criteria for the inherent characteristic of valve:
    - **Flow Coefficient Range:** The Flow Coefficient Range is the maximum and minimum flow coefficient ratio. $k_{v_{min.}} \iff k_{v_{max.}}$.
    - **Controllability Range:** The Controllability Range is the range between the maximum and minimum position of the valve $PV_{min.} \iff PV_{max.}$
    - **Operation Ratio:** The Operating Ratio is the ratio of the Flow Coefficient Range to the Operation Ratio minus one. The optimal value of the  Operating Ratio is Zero; an Operating Ratio of Zero means that a 1% valve opening will increase the flow coefficient by $1\%$.
  
  $$
    Ratio =\left| \frac{(k_{v_{max.}} -  k_{v_{min.}})}{(PV_{max.}- PV_{min.})} - 1 \right|
  $$
    
2.  System (installed characteristic) and project-dependent criteria:
  - Frequency and time with which the valve is in any of the cavitation states.
  - Importance of the valve.
  - The reliability of the information provided/collected.
  - The safety factors that were included in the hydraulic calculation.

## Selection

```{r}
#| label: summary_brand_valves
#| tbl-cap: "Summary Brand Valves"
#| include: true
#| echo: false
#| 


summary_brand_valves <- full_data |> 
  select(brand,	kv, kv_kvs,	position, cav_index) |> 
  group_by(brand) |> 
  summarise(min.kv = min(kv),
            max.kv = max(kv),
            min.pv = min(position),
            max.pv = max(position),
            min.cav = min(cav_index),
            max.cav = max(cav_index),
            mean.cav = mean(cav_index)) |> 
  mutate(op.ratio = (max.kv-min.kv)/(max.pv-min.pv)-1,
         kv.range = (max.kv-min.kv),
         pv.range = (max.pv-min.pv))

summary_brand_valves |> 
  select(brand,	min.kv,	max.kv, kv.range,	
         min.pv, max.pv,	pv.range, 
         min.cav, max.cav,	mean.cav, op.ratio) |>
  mutate(min.pv = min.pv/100, 
         max.pv = max.pv/100,	
         pv.range = pv.range/100) |> 
  mutate(across(where(is.numeric), round, 2)) |> 
  gt() |> 
  cols_label(
    brand     = html("<i>Brand</i>"),
    min.kv    = html("<i>Min.</i>"),
    max.kv    = html("<i>Max.</i>"),
    kv.range  = html("<i>&Delta;Kv</i>"),
    min.pv    = html("<i>Min.</i>"),
    max.pv    = html("<i>Max.</i>"),
    pv.range  = html("<i>&Delta;Pos.</i>"),
    min.cav   = html("<i>Min.</i>"),
    max.cav   = html("<i>Max.</i>"),
    mean.cav  = html("<i>Mean</i>"),
    op.ratio  = html("<i>Op.Radio</i>")
  ) |> 
  
  
  fmt_percent(
    columns = c(min.pv, max.pv,	pv.range),
    decimals = 1
  ) |> 
  
  tab_spanner(
    label = html("<i>K<sub>v</sub> in m<sup>3</sup>/h</i>"),
    columns = c(min.kv,	max.kv, kv.range)
  ) |> 
  tab_spanner(
    label = html("<i>Position in %</i>"),
    columns = c(min.pv, max.pv,	pv.range)
  ) |> 
  tab_spanner(
    label = html("<i>Cav. Regime</i>"),
    columns = c(min.cav,	max.cav,	mean.cav)
  )|> 
  
  opt_stylize(style = 6, color = "gray")

```


In this example, we will base the selection on the inherent characteristics of the valve. 
The selection is clear for _**Brand valve B**_ since it has the lowest average cavitation regime and the most inferior radio operations.


::: {#refs}
  - Wagner, Walter. Regel- und Sicherheitsarmaturen. 1. Aufl. dieser Ausg, Vogel, 2008.
  - ANSI/ISA, editor. ANSI/ISA-75.01.01-2007, Flow Equations for Sizing Control Valves. ISA, 2007.
  - British Standard, editor. BS EN 60534-1:2005. Control Valve Terminology and General Considerations. 2005.
  - ANSI/ISA, editor. ANSI/ISA-RP75.21, Process Data Presentation for Control Valves. Instrument Society of America, 1996.
  - ANSI/ISA, editor. ANSI/ISA–RP75.23–1995, Considerations for Evaluating Control Valve Cavitation. Instrument Society of America, 1995.
  - American National Standards Institute, and Instrument Society of America. Flow Equations for Sizing Control Valves: Standard. 1985.
  - ANSI/ISA. ANSI/ISA-75.11-1985 (R1996) , Inherent Flow Characteristic and Rangeability of Control Valves. 1985.

:::

[^1]: Liquid pressure recovery factor of a control valve without attached fittings (ISA-75.01.01-2007: Flow Equations for Sizing Control Valves).
[^2]: In the next blogs we will see how these values can be calculated from the documents supplied by the suppliers.
[^3]: These parameters are similar to those in reality but adjusted for this Example.
